name: build

on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: make install
    - name: Run all tests, linting and baselines
      run: make test
  release:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.7]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: make install
    - name: Run all tests, linting and baselines
      run: make test

  sync_master:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Sync master from detached head
      # If version matches CHANGELOG and pyproject.toml
      # If it passes all checks, successfully releases to test and prod
      # Then sync up master with latest source code release
      # where commit message will be Release notes title
      run: git push origin HEAD:refs/heads/master --force
